{"ast":null,"code":"var _jsxFileName = \"/home/dz-jp-16/Desktop/react-demo-app/src/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Channel from './Channel';\nimport Post from './Post';\nimport { logOut } from './services/firebase';\nimport { UserContext } from './providers/UserProvider';\nimport { useHistory } from 'react-router';\nimport '../src/style/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [channel, setChannel] = React.useState([]);\n  const [selectedChannel, setSelectedChannel] = React.useState('');\n  const [post, setPost] = React.useState({\n    subject: '',\n    body: ''\n  });\n  const [isPost, setIsPost] = React.useState(false);\n  let history = useHistory();\n  const user = React.useContext(UserContext);\n  useEffect(() => {\n    console.log(user);\n    debugger;\n\n    if (user) {\n      history.push('/dashboard');\n    } else {\n      history.push('/');\n    }\n  }, [user]);\n\n  const handleClick = () => {\n    setChannel(prev => [...prev, `My Channel ${prev.length + 1}`]);\n  };\n\n  const onChannelSelect = val => {\n    setSelectedChannel(val);\n  };\n\n  const onSubmit = e => {\n    if (post.subject && post.body && e.key === 'Enter') {\n      setIsPost(true);\n    }\n  };\n\n  const onPostChange = (e, key) => {\n    e.preventDefault();\n\n    if (key == 'subject') {\n      setPost({ ...post,\n        subject: e.target.value\n      });\n    } else if (key == 'body') {\n      setPost({ ...post,\n        body: e.target.value\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: logOut,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://img.icons8.com/ios-filled/50/000000/google-logo.png\",\n            alt: \"google icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"@levelshealth.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleClick(),\n            children: \"New Channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), channel.map(val => /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => onChannelSelect(val),\n            children: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [!isPost && selectedChannel && /*#__PURE__*/_jsxDEV(Channel, {\n          channel: selectedChannel,\n          onPostChange: onPostChange,\n          onSubmit: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 44\n        }, this), isPost && /*#__PURE__*/_jsxDEV(Post, {\n          post: post,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"MOXk11TgQGCc/FjGmmUA8WBuX60=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/dz-jp-16/Desktop/react-demo-app/src/Dashboard.jsx"],"names":["React","useEffect","Channel","Post","logOut","UserContext","useHistory","Dashboard","channel","setChannel","useState","selectedChannel","setSelectedChannel","post","setPost","subject","body","isPost","setIsPost","history","user","useContext","console","log","push","handleClick","prev","length","onChannelSelect","val","onSubmit","e","key","onPostChange","preventDefault","target","value","map"],"mappings":"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","sourcesContent":["import React,{ useEffect } from 'react';\nimport Channel from './Channel';\nimport Post from './Post';\nimport {logOut} from './services/firebase'\nimport { UserContext } from './providers/UserProvider';\nimport { useHistory } from 'react-router';\nimport '../src/style/main.css';\n\nfunction Dashboard() {\n  const [channel, setChannel] = React.useState([])\n  const [selectedChannel, setSelectedChannel] = React.useState('')\n  const [post, setPost] = React.useState({subject: '', body: ''})\n  const [isPost, setIsPost] = React.useState(false)\n\n  let history = useHistory();\n  const user = React.useContext(UserContext)\n\n  useEffect(() => {\n      console.log(user)\n      debugger\n      if (user) {\n          history.push('/dashboard')\n      }else{\n          history.push('/')\n      }\n  }, [user]);\n\n  const handleClick = () => {\n    setChannel(prev => [...prev, `My Channel ${prev.length + 1}`]);\n  }\n\n  const onChannelSelect = (val) => {\n    setSelectedChannel(val)\n  }\n\n  const onSubmit = (e) => {\n    if(post.subject && post.body && e.key === 'Enter'){\n      setIsPost(true)\n    }\n  }\n\n  const onPostChange = (e, key) => {\n    e.preventDefault()\n    if(key == 'subject'){\n      setPost({...post, subject: e.target.value})\n    }else if(key == 'body'){\n      setPost({...post, body: e.target.value})\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"main_dashboard\">\n        <div>\n            <button className=\"logout-button\" onClick={logOut}>\n                <img\n                    src=\"https://img.icons8.com/ios-filled/50/000000/google-logo.png\"\n                    alt=\"google icon\"\n                />\n                <span> logout</span>\n            </button>\n            <div className=\"dashboard\">\n                <p>@levelshealth.com</p>\n                <button onClick={() => handleClick()}>New Channel</button>\n                {channel.map(val => <p onClick={() => onChannelSelect(val)}>{val}</p>)}\n            </div>            \n        </div>\n        <div>\n            {!isPost && selectedChannel && <Channel channel={selectedChannel} onPostChange={onPostChange} onSubmit={onSubmit}></Channel>}\n            {isPost && <Post post={post} user={user}></Post>}\n        </div>\n      </div>     \n    </div>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}