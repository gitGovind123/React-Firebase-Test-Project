{"ast":null,"code":"var _jsxFileName = \"/home/dz-jp-16/Desktop/react-demo-app/src/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Channel from './Channel';\nimport Post from './Post';\nimport { logOut } from './services/firebase';\nimport { UserContext } from './providers/UserProvider';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [channel, setChannel] = React.useState([]);\n  const [selectedChannel, setSelectedChannel] = React.useState('');\n  const [post, setPost] = React.useState({\n    subject: '',\n    body: ''\n  });\n  const [isPost, setIsPost] = React.useState(false);\n  let history = useHistory();\n  const user = React.useContext(UserContext);\n  useEffect(() => {\n    console.log(user);\n\n    if (user) {\n      history.push('/dashboard');\n    } else {\n      history.push('/');\n    }\n  }, [user]);\n\n  const handleClick = () => {\n    setChannel(prev => [...prev, `My Channel ${prev.length + 1}`]);\n  };\n\n  const onChannelSelect = val => {\n    setSelectedChannel(val);\n  };\n\n  const onSubmit = e => {\n    if (post.subject && post.body && e.key === 'Enter') {\n      setIsPost(true);\n    }\n  };\n\n  const onPostChange = (e, key) => {\n    e.preventDefault();\n\n    if (key == 'subject') {\n      setPost({ ...post,\n        subject: e.target.value\n      });\n    } else if (key == 'body') {\n      setPost({ ...post,\n        body: e.target.value\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: logOut,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://img.icons8.com/ios-filled/50/000000/google-logo.png\",\n          alt: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"@levelshealth.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(),\n        children: \"New Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), channel.map(val => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => onChannelSelect(val),\n        children: val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), !isPost && selectedChannel && /*#__PURE__*/_jsxDEV(Channel, {\n      channel: selectedChannel,\n      onPostChange: onPostChange,\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 38\n    }, this), isPost && /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"MOXk11TgQGCc/FjGmmUA8WBuX60=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/dz-jp-16/Desktop/react-demo-app/src/Dashboard.jsx"],"names":["React","Channel","Post","logOut","UserContext","useHistory","Dashboard","channel","setChannel","useState","selectedChannel","setSelectedChannel","post","setPost","subject","body","isPost","setIsPost","history","user","useContext","useEffect","console","log","push","handleClick","prev","length","onChannelSelect","val","onSubmit","e","key","onPostChange","preventDefault","target","value","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Channel from './Channel';\nimport Post from './Post';\nimport {logOut} from './services/firebase'\nimport { UserContext } from './providers/UserProvider';\nimport { useHistory } from 'react-router';\n\nfunction Dashboard() {\n  const [channel, setChannel] = React.useState([])\n  const [selectedChannel, setSelectedChannel] = React.useState('')\n  const [post, setPost] = React.useState({subject: '', body: ''})\n  const [isPost, setIsPost] = React.useState(false)\n\n  let history = useHistory();\n  const user = React.useContext(UserContext)\n\n  useEffect(() => {\n      console.log(user)\n      if (user) {\n          history.push('/dashboard')\n      }else{\n          history.push('/')\n      }\n  }, [user]);\n\n  const handleClick = () => {\n    setChannel(prev => [...prev, `My Channel ${prev.length + 1}`]);\n  }\n\n  const onChannelSelect = (val) => {\n    setSelectedChannel(val)\n  }\n\n  const onSubmit = (e) => {\n    if(post.subject && post.body && e.key === 'Enter'){\n      setIsPost(true)\n    }\n  }\n\n  const onPostChange = (e, key) => {\n    e.preventDefault()\n    if(key == 'subject'){\n      setPost({...post, subject: e.target.value})\n    }else if(key == 'body'){\n      setPost({...post, body: e.target.value})\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <button className=\"logout-button\" onClick={logOut}>\n            <img\n                src=\"https://img.icons8.com/ios-filled/50/000000/google-logo.png\"\n                alt=\"google icon\"\n            />\n            <span> logout</span>\n        </button>\n        <p>@levelshealth.com</p>\n        <button onClick={() => handleClick()}>New Channel</button>\n        {channel.map(val => <p onClick={() => onChannelSelect(val)}>{val}</p>)}\n      </div>\n      {!isPost && selectedChannel && <Channel channel={selectedChannel} onPostChange={onPostChange} onSubmit={onSubmit}></Channel>}\n      {isPost && <Post post={post}></Post>}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}