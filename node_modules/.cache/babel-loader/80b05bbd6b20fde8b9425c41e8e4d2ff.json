{"ast":null,"code":"import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport { getDatabase, ref, child, get } from \"firebase/database\";\nfirebase.initializeApp({\n  apiKey: \"AIzaSyA-N4g791SKpBViFcFxJF_Dhmu265YrUzg\",\n  authDomain: \"firestoredemoproj.firebaseapp.com\",\n  projectId: \"firestoredemoproj\",\n  storageBucket: \"firestoredemoproj.appspot.com\",\n  messagingSenderId: \"418361808194\",\n  appId: \"1:418361808194:web:5793c1a2d63b09120324db\",\n  measurementId: \"G-QL0D4VVQK7\"\n});\nconst dbRef = ref(getDatabase());\ndebugger;\nget(child(dbRef, `user`)).then(snapshot => {\n  if (snapshot.exists()) {\n    console.log(snapshot.val());\n  } else {\n    console.log(\"No data available\");\n  }\n}).catch(error => {\n  console.error(error);\n});\nexport const auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(googleProvider).then(res => {\n    console.log(res.user);\n  }).catch(error => {\n    console.log(error.message);\n  });\n};\nexport const logOut = () => {\n  auth.signOut().then(() => {\n    console.log('logged out');\n  }).catch(error => {\n    console.log(error.message);\n  });\n};","map":{"version":3,"sources":["/home/dz-jp-16/Desktop/react-demo-app/src/services/firebase.js"],"names":["firebase","getDatabase","ref","child","get","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","dbRef","then","snapshot","exists","console","log","val","catch","error","auth","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","res","user","message","logOut","signOut"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,GAAlC,QAA6C,mBAA7C;AAGAJ,QAAQ,CAACK,aAAT,CAAuB;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,mCAFO;AAGnBC,EAAAA,SAAS,EAAE,mBAHQ;AAInBC,EAAAA,aAAa,EAAE,+BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB;AAUA,MAAMC,KAAK,GAAGX,GAAG,CAACD,WAAW,EAAZ,CAAjB;AACA;AACAG,GAAG,CAACD,KAAK,CAACU,KAAD,EAAS,MAAT,CAAN,CAAH,CAA0BC,IAA1B,CAAgCC,QAAD,IAAc;AAC3C,MAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,GAAT,EAAZ;AACD,GAFD,MAEO;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,CAND,EAMGE,KANH,CAMUC,KAAD,IAAW;AAClBJ,EAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,CARD;AAUA,OAAO,MAAMC,IAAI,GAAGtB,QAAQ,CAACsB,IAAT,EAAb;AACP,MAAMC,cAAc,GAAG,IAAIvB,QAAQ,CAACsB,IAAT,CAAcE,kBAAlB,EAAvB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClCH,EAAAA,IAAI,CAACI,eAAL,CAAqBH,cAArB,EAAqCT,IAArC,CAA2Ca,GAAD,IAAS;AAC/CV,IAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,IAAhB;AACH,GAFD,EAEGR,KAFH,CAEUC,KAAD,IAAW;AAChBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACQ,OAAlB;AACH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxBR,EAAAA,IAAI,CAACS,OAAL,GAAejB,IAAf,CAAoB,MAAK;AACrBG,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,GAFD,EAEGE,KAFH,CAEUC,KAAD,IAAW;AAChBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACQ,OAAlB;AACH,GAJD;AAKH,CANM","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport { getDatabase, ref, child, get } from \"firebase/database\";\n\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyA-N4g791SKpBViFcFxJF_Dhmu265YrUzg\",\n    authDomain: \"firestoredemoproj.firebaseapp.com\",\n    projectId: \"firestoredemoproj\",\n    storageBucket: \"firestoredemoproj.appspot.com\",\n    messagingSenderId: \"418361808194\",\n    appId: \"1:418361808194:web:5793c1a2d63b09120324db\",\n    measurementId: \"G-QL0D4VVQK7\"\n});\n\nconst dbRef = ref(getDatabase());\ndebugger\nget(child(dbRef, `user`)).then((snapshot) => {\n  if (snapshot.exists()) {\n    console.log(snapshot.val());\n  } else {\n    console.log(\"No data available\");\n  }\n}).catch((error) => {\n  console.error(error);\n});\n\nexport const auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\n\nexport const signInWithGoogle = () => {\n    auth.signInWithPopup(googleProvider).then((res) => {\n        console.log(res.user)\n    }).catch((error) => {\n        console.log(error.message)\n    })\n}\n\nexport const logOut = () => {\n    auth.signOut().then(()=> {\n        console.log('logged out')\n    }).catch((error) => {\n        console.log(error.message)\n    })\n}"]},"metadata":{},"sourceType":"module"}