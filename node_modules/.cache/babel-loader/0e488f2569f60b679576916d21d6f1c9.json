{"ast":null,"code":"var _jsxFileName = \"/home/dz-jp-16/Desktop/react-demo-app/src/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Channel from './Channel';\nimport Post from './Post';\nimport { logOut } from './services/firebase';\nimport { UserContext } from './providers/UserProvider';\nimport { useHistory } from 'react-router';\nimport '../src/style/main.css';\nimport { db } from './services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  // const dbRef = ref(getDatabase());\n  const [channel, setChannel] = React.useState([]);\n  const [selectedChannel, setSelectedChannel] = React.useState('');\n  const [newPost, setNewPost] = React.useState({\n    subject: '',\n    body: ''\n  });\n  const [isPost, setIsPost] = React.useState(false);\n  const [users, setUsers] = React.useState(false);\n  const [posts, setPosts] = React.useState(false);\n  let history = useHistory();\n  const user = React.useContext(UserContext);\n  useEffect(() => {\n    if (user) {\n      history.push('/dashboard');\n    } else {\n      history.push('/');\n    }\n  }, [user]);\n  useEffect(() => {\n    console.log(db);\n    fetchUsers();\n    fetchPosts();\n  }, []);\n\n  const fetchUsers = async () => {\n    const response = db.collection('Users');\n    const data = await response.get();\n    console.log(data.docs);\n    let list = [];\n    data.docs.forEach(item => {\n      list.push(item.data());\n    });\n    setUsers(list);\n  };\n\n  const fetchPosts = async () => {\n    const response = db.collection('Posts');\n    const data = await response.get();\n    console.log(data.docs);\n    let list = [];\n    data.docs.forEach(item => {\n      list.push(item.data());\n    });\n    setPosts(list);\n    console.log(list);\n  };\n\n  const postUsers = async () => {\n    db.collection(\"Users\").add({\n      email: 'priyanka@gmail.com',\n      name: 'priyanka'\n    }).then(docRef => {\n      alert(\"Data Successfully Submitted\");\n    }).catch(error => {\n      console.error(\"Error adding document: \", error);\n    });\n  };\n\n  const handleClick = () => {\n    setChannel(prev => [...prev, `My Channel ${prev.length + 1}`]);\n  };\n\n  const onChannelSelect = val => {\n    setSelectedChannel(val);\n  };\n\n  const onSubmit = e => {\n    if (newPost.subject && newPost.body) {\n      db.collection(\"Posts\").add({\n        subject: newPost.subject,\n        body: newPost.body,\n        email: user.email,\n        name: user.displayName\n      }).then(docRef => {\n        setIsPost(true);\n        alert(\"Data Successfully Submitted\");\n      }).catch(error => {\n        console.error(\"Error adding document: \", error);\n      });\n    }\n  };\n\n  const onPostChange = (e, key) => {\n    if (key == 'subject') {\n      setNewPost({ ...newPost,\n        subject: e.target.value\n      });\n    } else if (key == 'body') {\n      setNewPost({ ...newPost,\n        body: e.target.value\n      });\n    }\n  };\n\n  const onPostSelect = val => {\n    setNewPost(val);\n    console.log(newPost);\n    setIsPost(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: logOut,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"@levelshealth.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleClick(),\n            children: \"New Channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), channel.map(val => /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: () => onChannelSelect(val),\n            children: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [!isPost && selectedChannel && /*#__PURE__*/_jsxDEV(Channel, {\n          channel: selectedChannel,\n          posts: posts,\n          onPostChange: onPostChange,\n          onPostSelect: onPostSelect,\n          onSubmit: e => onSubmit(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 44\n        }, this), isPost && /*#__PURE__*/_jsxDEV(Post, {\n          newPost: newPost,\n          posts: posts,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"SryGemU7cFl8zWDZpWgY5AfMFBY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/dz-jp-16/Desktop/react-demo-app/src/Dashboard.jsx"],"names":["React","useEffect","Channel","Post","logOut","UserContext","useHistory","db","Dashboard","channel","setChannel","useState","selectedChannel","setSelectedChannel","newPost","setNewPost","subject","body","isPost","setIsPost","users","setUsers","posts","setPosts","history","user","useContext","push","console","log","fetchUsers","fetchPosts","response","collection","data","get","docs","list","forEach","item","postUsers","add","email","name","then","docRef","alert","catch","error","handleClick","prev","length","onChannelSelect","val","onSubmit","e","displayName","onPostChange","key","target","value","onPostSelect","map","cursor"],"mappings":"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","sourcesContent":["import React,{ useEffect } from 'react';\nimport Channel from './Channel';\nimport Post from './Post';\nimport {logOut} from './services/firebase'\nimport { UserContext } from './providers/UserProvider';\nimport { useHistory } from 'react-router';\nimport '../src/style/main.css';\nimport { db } from './services/firebase';\n\nfunction Dashboard() {\n // const dbRef = ref(getDatabase());\n  const [channel, setChannel] = React.useState([]);\n  const [selectedChannel, setSelectedChannel] = React.useState('');\n  const [newPost, setNewPost] = React.useState({subject: '', body: ''});\n  const [isPost, setIsPost] = React.useState(false);\n  const [users, setUsers] = React.useState(false);\n  const [posts, setPosts] = React.useState(false);\n\n  let history = useHistory();\n  const user = React.useContext(UserContext);\n\n  useEffect(() => {\n      if (user) {\n          history.push('/dashboard')\n      }else{\n          history.push('/')\n      }\n  }, [user]);\n\n  useEffect(() => {\n      console.log(db)\n      fetchUsers();\n      fetchPosts();\n  },[]);\n\n    const fetchUsers = async()=>{\n        const response= db.collection('Users');\n        const data=await response.get();\n        console.log(data.docs)\n        let list = [];\n        data.docs.forEach(item=>{\n          list.push(item.data())\n        })\n        setUsers(list);\n    }\n\n    const fetchPosts = async()=>{\n        const response= db.collection('Posts');\n        const data=await response.get();\n        console.log(data.docs)\n        let list = [];\n        data.docs.forEach(item=>{\n          list.push(item.data())\n        })\n        setPosts(list);\n        console.log(list)\n    }\n\n    const postUsers = async()=>{\n        db.collection(\"Users\").add({\n            email: 'priyanka@gmail.com',\n            name: 'priyanka'\n        })\n            .then((docRef) => {\n                alert(\"Data Successfully Submitted\");\n            })\n            .catch((error) => {\n                console.error(\"Error adding document: \", error);\n            });\n    }\n\n  const handleClick = () => {\n    setChannel(prev => [...prev, `My Channel ${prev.length + 1}`]);\n  }\n\n  const onChannelSelect = (val) => {\n    setSelectedChannel(val)\n  }\n\n  const onSubmit = (e) => {\n    if(newPost.subject && newPost.body){\n      db.collection(\"Posts\").add({\n            subject: newPost.subject,\n            body: newPost.body,\n            email: user.email,\n            name: user.displayName\n        })\n            .then((docRef) => {\n                setIsPost(true)\n                alert(\"Data Successfully Submitted\");\n            })\n            .catch((error) => {\n                console.error(\"Error adding document: \", error);\n            });\n    }\n  }\n\n  const onPostChange = (e, key) => {\n    if(key == 'subject'){\n        setNewPost({...newPost, subject: e.target.value})\n      }else if(key == 'body'){\n        setNewPost({...newPost, body: e.target.value})\n      }\n  }\n  \n  const onPostSelect = (val) => {\n    setNewPost(val)\n    console.log(newPost)\n    setIsPost(true)\n    }\n\n  return (\n    <div className=\"App\">\n      <div className=\"main_dashboard\">\n        <div className=\"left_section\">\n            <button className=\"logout-button\" onClick={logOut}>\n                <span> logout</span>\n            </button>\n            <div className=\"dashboard\">\n                <p>@levelshealth.com</p>\n                <button onClick={() => handleClick()}>New Channel</button>\n                {channel.map(val => <p style={{cursor: 'pointer'}} onClick={() => onChannelSelect(val)}>{val}</p>)}\n            </div>            \n        </div>\n        <div>\n            {!isPost && selectedChannel && <Channel channel={selectedChannel} posts={posts} onPostChange={onPostChange} onPostSelect={onPostSelect}  onSubmit={(e) => onSubmit(e)}></Channel>}\n            {isPost && <Post newPost={newPost} posts={posts} user={user}></Post>}\n        </div>\n      </div>     \n    </div>\n  );\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}